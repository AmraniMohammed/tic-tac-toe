name: C++ CI/CD with Qt (Windows)

permissions:
  contents: write
  packages: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Install Qt 6
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.6.2"
          host: windows
          arch: win64_msvc2019_64

      # 3. Configure CMake
      - name: Configure CMake
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_PREFIX_PATH="${{ env.QT_ROOT_DIR }}"

      # 4. Build all targets (GUI + tests)
      - name: Build project
        run: cmake --build build --config Release --parallel

      # 5. Run tests
      - name: Run tests
        run: ctest --test-dir build -C Release

      # 6. Deploy Qt DLLs
      - name: Deploy Qt DLLs
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release
          Copy-Item build\Release\appTicTacToe.exe release\
          & "${{ env.QT_ROOT_DIR }}\bin\windeployqt.exe" --release release\appTicTacToe.exe

      # 7. Package executable
      - name: Package executable
        run: |
          cd release
          powershell Compress-Archive -Path * -DestinationPath appTicTacToe.zip

      # 8. Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TicTacToe-executable
          path: release\appTicTacToe.zip

      # 9. Create a new versioned GitHub Release for each push
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref == 'refs/heads/main'
        with:
          name: "Release v${{ github.run_number }}"
          tag_name: "v${{ github.run_number }}"
          files: release/appTicTacToe.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
